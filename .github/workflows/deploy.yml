# This is a basic workflow to help you get started with Actions(6)

name: BonBon Back-end CI&CD

on:
  push:
    branches: main
env:
  AWS_REGION: ap-northeast-2 #리전
  S3_BUCKET_NAME: bonbon-back-end-bucket #버킷 이름
  CODE_DEPLOY_APPLICATION_NAME: bonbon-back-end-deploy #CodeDeploy 애플리케이션 이름
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: bonbon-back-end-deploy-group #CodeDeploy 배포 그룹 이름

permissions:
  contents: read
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # resources 디렉토리 생성
      - name: Create resources directory (for ignored files)
        run: mkdir -p ./bonbon/bonbon/src/main/resources

      # properties들 생성
      - name: Set application.properties
        run: |
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./bonbon/bonbon/src/main/resources/application.properties
     #     echo "${{ secrets.APPLICATION_JWT_PROPERTIES }}" > ./bonbon/bonbon/src/main/resources/application-jwt.properties
     #     echo "${{ secrets.APPLICATION_AWS_PROPERTIES }}" > ./bonbon/bonbon/src/main/resources/application-aws.properties

      # gradlew 권한 추가
      - name: Make gradlew executable
        run: chmod +x ./bonbon/bonbon/gradlew

      - name: Build and Test
        run: |
          cd ./bonbon/bonbon
          ./gradlew clean build test --info


      - name: Make deployment zip
        run: |
          cd ./bonbon/bonbon
          zip -r $GITHUB_SHA.zip build appspec.yml scripts
          mv $GITHUB_SHA.zip ../../
      
      # JDK 23 세팅
      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23'

      # AWS 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Upload to S3
        run: |
          aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ env.S3_BUCKET_NAME }}/$GITHUB_SHA.zip

      # CodeDeploy로 배포 실행
      - name: Deploy to EC2
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=${{ env.S3_BUCKET_NAME }},key=${{ github.sha }}.zip,bundleType=zip
